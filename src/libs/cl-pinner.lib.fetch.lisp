;; cl-pinner - A project template generated by ahungry-fleece
;; Copyright (C) 2016 Your Name <cl-pinner@example.com>
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU Affero General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU Affero General Public License for more details.
;;
;; You should have received a copy of the GNU Affero General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;;;; cl-pinner.lib.stub.lisp

(in-package #:cl-user)

(defpackage cl-pinner.lib.fetch
  (:use :cl)
  (:export
   :fetch-git))

(in-package #:cl-pinner.lib.fetch)

(defparameter *base-directory* (asdf:system-source-directory :cl-pinner))

(defun fetch-dir (package version)
  "Get the fetch dir to work in."
  (merge-pathnames (format nil "pinned/~a-~a" package version) *base-directory*))

(defun fetch-git (package uri version)
  "Clone and check out from URI the specified VERSION."
  (let* ((path (format nil "~a.tmp" (fetch-dir package version)))
         (cwd (sb-posix:getcwd)))
    (sb-ext:run-program "/usr/bin/git" (list "clone" uri (format nil "~a" path)))
    (sb-posix:chdir path)
    (sb-ext:run-program "/usr/bin/git" (list "checkout" version))
    (sb-posix:chdir cwd)))

(defun recombobulate-package (package version)
  "Rename it."
  (let* ((clone-to (fetch-dir package version))
         (clone-from (format nil "~a.tmp" clone-to)))
    (af.lib.clone:clone-project
     clone-from
     clone-to
     package
     "dude-sweet")))

(defun fetch (type package uri version)
  "Perform the operations."
  (declare (ignore type)) ;; only git supported atm...
  (fetch-git package uri version)
  (recombobulate-package package version))

;;; "cl-pinner.lib.stub" goes here. Hacks and glory await!
